"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import ast

from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', '')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = ast.literal_eval(os.getenv('DEBUG', 'True'))

ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', '*').split(" ")

# Application definition

INSTALLED_APPS = [

    # Admin Theme Apps
    'admin_interface',
    'colorfield',

    # Django Apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # 'django.contrib.sites',

    # Third-Party Apps
    # 'anymail',
    'ckeditor',
    'corsheaders',
    'import_export',
    'django_filters',
    'rest_framework',

    # Local Apps (Your project's apps)
    'order.apps.OrderConfig',
    'users.apps.UsersConfig',
    'catalog.apps.CatalogConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsPostCsrfMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DATABASE_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': os.getenv('DATABASE_NAME', os.path.join(BASE_DIR, 'db.sqlite3')),
        'USER': os.getenv('DATABASE_USER', ''),
        'PASSWORD': os.getenv('DATABASE_PASSWORD', ''),
        'HOST': os.getenv('DATABASE_HOST', ''),
        'PORT': os.getenv('DATABASE_PORT', ''),
        'OPTIONS': {
            'charset': 'utf8mb4'
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = os.getenv('LANGUAGE_CODE', 'en-us')

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

TIME_ZONE = os.getenv('TIME_ZONE', 'UTC')

USE_I18N = ast.literal_eval(os.getenv('USE_I18N', 'True'))

USE_L10N = ast.literal_eval(os.getenv('USE_L10N', 'True'))

USE_TZ = ast.literal_eval(os.getenv('USE_TZ', 'True'))


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "media"),
]

MEDIA_URL = os.path.join(BASE_DIR, "/media/")
MEDIA_ROOT = os.path.join(BASE_DIR, os.getenv('IMAGE_FOLDER', 'images/'))

SITE_ID = 1

# Custom User Model
# https://docs.djangoproject.com/en/3.2/topics/auth/customizing/#substituting-a-custom-user-model
AUTH_USER_MODEL = 'users.User'

# XFrameOptionsMiddleware
# https://docs.djangoproject.com/en/3.2/ref/clickjacking/#setting-x-frame-options-for-all-responses

X_FRAME_OPTIONS = 'SAMEORIGIN'


# Custom User Model
# https://docs.djangoproject.com/en/3.2/topics/auth/customizing/#substituting-a-custom-user-model

# AUTH_USER_MODEL = 'customer.User'

# ANYMAIL
# https://github.com/anymail/django-anymail

ANYMAIL = {
    # "MAILGUN_API_KEY": "<your Mailgun key>",
    # "MAILGUN_SENDER_DOMAIN": 'mg.example.com',  # your Mailgun domain, if needed
    "SENDGRID_API_KEY": os.getenv('SENDGRID_API_KEY', '')
}
EMAIL_BACKEND = "anymail.backends.sendgrid.EmailBackend"

# DEFAULT_FROM_EMAIL = "you@example.com"  # if you don't already have this in settings
# SERVER_EMAIL = "your-server@example.com"  # ditto (default from-email for Django errors)

# EMAIL_BACKEND = os.getenv('EMAIL_BACKEND', 'django.core.mail.backends.smtp.EmailBackend')
# EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')
# EMAIL_USE_TLS = ast.literal_eval(os.getenv('EMAIL_USE_TLS', 'True'))
# EMAIL_PORT = os.getenv('EMAIL_PORT', 587)
# EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

# REST_FRAMEWORK
# https://www.django-rest-framework.org/
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DATETIME_FORMAT': "iso-8601",
}

# JWT
# https://github.com/davesque/django-rest-framework-simplejwt
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=360),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
}

# CORS
# https://github.com/ottoyiu/django-cors-headers
CORS_ORIGIN_WHITELIST = (
    'http://localhost:5004',
    'http://127.0.0.1:5004',
    'http://localhost'
)

# CKEDITOR
# https://django-ckeditor.readthedocs.io/en/latest/

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono',
        'enterMode': 2,
        'entities': False,
        'basicEntities': False,
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-',
                'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', 'Language'],
            ['Bold', 'Italic', 'Underline'],
            ['Styles', 'Format', 'Font', 'FontSize', 'TextColor', 'BGColor'],
            ['Link', 'Unlink'],
            ['Cut', 'Copy', 'Paste', 'PasteText',
                'PasteFromWord', '-', 'Undo', 'Redo'],
            ['Image', 'Table', 'HorizontalRule', 'Smiley',
                'SpecialChar', 'PageBreak', 'Iframe'],
            ['Find', 'Replace', 'SelectAll'],
            ['RemoveFormat', 'Source'],
            ['Maximize', 'ShowBlocks', 'Preview'],
        ],
        'tabSpaces': 2,
        'extraPlugins': ','.join([
            'uploadimage',
            'autoembed',
            # 'embedsemantic',
            'autogrow',
            'devtools',
            'dialog',
            'dialogui',
            'tableresize',
            'uploadwidget',
            'elementspath',
            'preview',
            'templates',
            'ajax',
            'codesnippet',
        ]),
        'removePlugins': 'stylesheetparser',
        'allowedContent': True,
        'width': '100%',
        'height': 200,
    },
}

# IMPORT EXPORT
# https://django-import-export.readthedocs.io/en/latest/

IMPORT_EXPORT_USE_TRANSACTIONS = True
